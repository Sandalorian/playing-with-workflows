name: Prepare CLI Release

on:
  workflow_call:

env:
  POM_FILE: 'cli/demo/pom.xml'

permissions:
  # required for pushing release branch
  contents: write
  # require for commenting on issue
  issues: write

jobs:
  prepare-release:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - uses: actions/setup-java@v4
      with:
        distribution: 'temurin'
        java-version: '17'

    - name: Setup git
      run: |
        git config --global user.name "my-release-manager"
        git config --global user.email "username@users.noreply.github.com"

    - name: Read version from pom.xml
      id: read_version
      run: |
        # Extract project.version from pom.xml
        project_version=$(mvn help:evaluate -Dexpression=project.version -q -DforceStdout -f $POM_FILE)  
        echo "Project version: $project_version"
        echo "PROJECT_VERSION=${project_version}" >> $GITHUB_ENV

    - name: Create release and release candidate version
      id: rc_version
      run: |
        # Use PROJECT_VERSION to create a release string
        release_version=$(echo $PROJECT_VERSION | awk -F"-" '{print $1}')
        rc_version=${release_version}-RC
        echo "Release Candidate Version: $rc_version"
        echo "Release Version: $release_version"
        echo "RELEASE_VERSION=${release_version}" >> $GITHUB_ENV
        echo "RC_VERSION=${rc_version}" >> $GITHUB_ENV

    - name: Create release branch
      run: |
        release_branch="release/cli/${RELEASE_VERSION}"
        git checkout -b "${release_branch}"
        echo "RELEASE_BRANCH=${release_branch}" >> $GITHUB_ENV

    - name: Update pom.xml to release candidate
      run: |
        sed -i "s/<version>${PROJECT_VERSION}<\/version>/<version>${RC_VERSION}<\/version>/" $POM_FILE
        git add $POM_FILE
        git commit -m "Update version to ${RC_VERSION}"
        
    - name: Tag the release candidate
      run: |
        git tag "${RC_VERSION}"
        git push origin "${RELEASE_BRANCH}" --tags

    - name: Update gh issue
      run: |
        echo "Issue URL: $ISSUE"
        gh issue comment $ISSUE --body "Hello! Thank you for starting the release process.
        The release branch has been created: $RELEASE_BRANCH
        The release candidate tag is: $RC_VERSION"
      env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          ISSUE: ${{ github.event.issue.html_url }}
