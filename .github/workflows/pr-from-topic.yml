name: Start pr from topic branch workflow
on:
  pull_request:
    types: 
      - 'opened'
      - 'synchronize'
    branches:
      - 'main'
    paths:
      - 'docker/**'
      - 'logstash/**'
env:
  LOGSTASH_PIPELINE_CONFS: 'logstash/pipeline/'

jobs:
  run_if:
    if: startsWith(github.head_ref, 'feature/') ||  startsWith(github.head_ref, 'hotfix/') ||  startsWith(github.head_ref, 'bugfix/')
    runs-on: ubuntu-latest
    steps:
      - name: Dump GitHub context
        env:
          GITHUB_CONTEXT: ${{ toJson(github) }}
        run: echo "$GITHUB_CONTEXT"
      - name: Dump job context
        env:
          JOB_CONTEXT: ${{ toJson(job) }}
        run: echo "$JOB_CONTEXT"
      - name: Dump steps context
        env:
          STEPS_CONTEXT: ${{ toJson(steps) }}
        run: echo "$STEPS_CONTEXT"
      - name: Dump runner context
        env:
          RUNNER_CONTEXT: ${{ toJson(runner) }}
        run: echo "$RUNNER_CONTEXT"
      - name: Dump strategy context
        env:
          STRATEGY_CONTEXT: ${{ toJson(strategy) }}
        run: echo "$STRATEGY_CONTEXT"
      - name: Dump matrix context
        env:
          MATRIX_CONTEXT: ${{ toJson(matrix) }}
        run: echo "$MATRIX_CONTEXT"

  check_if_head_is_topic:
    if: |
      startsWith(github.head_ref, 'feature/') 
      ||  startsWith(github.head_ref, 'hotfix/') 
      ||  startsWith(github.head_ref, 'bugfix/')
    runs-on: ubuntu-latest
    steps:
      - run: echo "This is a topic branch"

  setup_lggstash_pipeline_folders:
    needs: check_if_head_is_topic
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.get_pipeline_folders.output.folders_matrix }}
    steps:
      - uses: actions/checkout@v3
      - id: get_pipeline_folders
        run: |
          echo "folders_matrix=$(ls $LOGSTASH_PIPELINE_CONFS |jq -cnR '[inputs | select(length>0)]')" >> $GITHUB_OUTPUT

  print_pipeline_matrix:
    needs: setup_lggstash_pipeline_folders
    runs-on: ubuntu-latest
    steps:
      - run: echo "toJSON(needs) = ${{ toJSON(needs) }}"


  run_logstash_conf_test:
    needs: [check_if_head_is_topic]
    runs-on: ubuntu-latest
    steps:
      - name: run logstash test on all pipelines
        run: |
          docker run --name=logstash-tester --rm -t \
          --volume=$PWD/logstash/pipeline/:/usr/share/logstash/pipeline/ \
          --volume=$PWD/logstash/scripts:/home/logstash/scripts \
          docker.elastic.co/logstash/logstash:8.10.0 bash -c 'logstash --config.test_and_exit -f /usr/share/logstash/pipeline/debug_logs;exit_code=$?;test $exit_code -eq 0 && exit 0 || exit 1;'

  get_changed_files:
    needs: run_logstash_conf_test
    runs-on: ubuntu-latest
    outputs:
      changed_file_list: ${{ steps.get_changed_files_list.outputs.changed_files }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 2
      - name: Get Changed files in PR
        id: get_changed_files_list
        run: echo "changed_files=$(git diff --name-only -r HEAD^1 HEAD | xargs)" >> $GITHUB_OUTPUT

  
  is_debug_conf_changed:
    needs: get_changed_files
    if: |
      contains(needs.get_changed_files.outputs.changed_file_list, 'volumes/logstash/pipeline/debug_logs/') ||
      contains(needs.get_changed_files.outputs.changed_file_list, 'volumes/logstash/scripts/debug_logs/')
    runs-on: ubuntu-latest
    steps:
      - name: Start test of changed debug conf
        run: |
          echo "We have found a change in the debug conf folder"

  is_metrics_conf_changed:
    needs: get_changed_files
    if: |
      contains(needs.get_changed_files.outputs.changed_file_list, 'volumes/logstash/pipeline/metrics/') ||
      contains(needs.get_changed_files.outputs.changed_file_list, 'volumes/logstash/scripts/metrics/')
    runs-on: ubuntu-latest
    steps:
      - name: Start test of changed metrics conf
        run: echo "We have found a change in the metrics conf folder"

  is_query_conf_changed:
    needs: get_changed_files
    if: |
      contains(needs.get_changed_files.outputs.changed_file_list, 'volumes/logstash/pipeline/query_logs/') ||
      contains(needs.get_changed_files.outputs.changed_file_list, 'volumes/logstash/scripts/query_logs/')
    runs-on: ubuntu-latest
    steps:
      - name: Start test of changed query conf
        run: echo "We have found a change in the query conf folder"
    
