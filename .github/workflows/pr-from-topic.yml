name: Start pr from topic branch workflow
on:
  pull_request:
    types: 
      - 'opened'
      - 'synchronize'
    branches:
      - 'main'
    paths:
      - 'docker/myimage/**'
      - 'docker/theotherone/**'
      - 'docker/thisone/**'

jobs:
  run_if:
    if: startsWith(github.head_ref, 'feature/') ||  startsWith(github.head_ref, 'hotfix/') ||  startsWith(github.head_ref, 'bugfix/')
    runs-on: ubuntu-latest
    steps:
      - name: Dump GitHub context
        env:
          GITHUB_CONTEXT: ${{ toJson(github) }}
        run: echo "$GITHUB_CONTEXT"
      - name: Dump job context
        env:
          JOB_CONTEXT: ${{ toJson(job) }}
        run: echo "$JOB_CONTEXT"
      - name: Dump steps context
        env:
          STEPS_CONTEXT: ${{ toJson(steps) }}
        run: echo "$STEPS_CONTEXT"
      - name: Dump runner context
        env:
          RUNNER_CONTEXT: ${{ toJson(runner) }}
        run: echo "$RUNNER_CONTEXT"
      - name: Dump strategy context
        env:
          STRATEGY_CONTEXT: ${{ toJson(strategy) }}
        run: echo "$STRATEGY_CONTEXT"
      - name: Dump matrix context
        env:
          MATRIX_CONTEXT: ${{ toJson(matrix) }}
        run: echo "$MATRIX_CONTEXT"

  check_if_head_is_topic:
    if: startsWith(github.head_ref, 'feature/') ||  startsWith(github.head_ref, 'hotfix/') ||  startsWith(github.head_ref, 'bugfix/')
    runs-on: ubuntu-latest
    steps:
      - run: echo "This is a topic branch"

  get_changed_files:
    needs: check_if_head_is_topic
    runs-on: ubuntu-latest
    outputs:
      changed_file_list: ${{ steps.get_changed_files_list.outputs.changed_files }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 2
      - name: Get Changed files in PR
        id: get_changed_files_list
        run: echo "changed_files=$(git diff --name-only -r HEAD^1 HEAD | xargs)" >> $GITHUB_OUTPUT
  
  run_a_check_on_changed_file_list:
    needs: get_changed_files
    if: contains('docker/myimage/', ${{ needs.get_changed_files.outputs.changed_file_list }})
    runs-on: ubuntu-latest
    steps:
      - name: print change file list
        run: echo "We have found a change in the myimage docker folder"